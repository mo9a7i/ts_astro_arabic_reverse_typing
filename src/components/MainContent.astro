---
import GradientBorderCard from './GradientBorderCard.astro';
import GradientCard from './GradientCard.astro';
import SocialLinks from './SocialLinks.astro';
import WhatIsThis from './WhatIsThis.astro';
---

<div class="">
	
	<div class="mb-12">
		<GradientCard>
			<div class="">
				<label for="area" class="block font-medium text-2xl lg:text-3xl mb-2">اكتب هنا</label>
				<div class="mt-1 relative rounded-md shadow-sm">
					<textarea
						id="area"
						name="area"
						aria-label="Input text area"
						placeholder="اكتب النص هنا..."
						oninput="this.style.height = '';this.style.height = this.scrollHeight + 'px'"
						style="min-height: 150px; overflow-y: hidden;"
						class="text-gray-700 appearance-none block w-full px-4 py-3 border border-gray-300 rounded-md placeholder-gray-400 
						focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-purple-500
						transition-all duration-200 ease-in-out 
						text-base lg:text-lg leading-relaxed
						hover:border-purple-400"
						cols="50"
					></textarea>
					<button
						type="button"
						id="clearButton"
						class="absolute top-2 left-2 text-gray-400 hover:text-gray-600 transition-colors"
						aria-label="Clear text"
					>
						<svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
							<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
						</svg>
					</button>
					<div class="absolute bottom-2 right-2 text-sm">
						<span id="charCount" class="font-medium text-gray-400">0</span>
						<span class="text-gray-400"> حرف</span>
						<span id="lengthIndicator" class="hidden ml-2 text-yellow-500">
							<svg class="w-4 h-4 inline" fill="currentColor" viewBox="0 0 20 20">
								<path d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z"/>
							</svg>
						</span>
					</div>
				</div>
			</div>

			<div class="mt-6">
				<label for="area2" class="block font-medium text-3xl">وانسخ من هنا</label>
				<div class="mt-1 rounded-md shadow-sm">
					<textarea
						id="area2"
						name="area2"
						aria-label="Output text area"
						placeholder="النص المحول سيظهر هنا..."
						class="text-gray-700 appearance-none block w-full px-3 py-2 
						border border-gray-300 rounded-md placeholder-gray-400 
						bg-gray-50 cursor-not-allowed
						focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-purple-500
						transition-all duration-200 ease-in-out 
						lg:leading-5"
						rows="6"
						cols="50"
						readonly
					>
					</textarea>
				</div>
			</div>

			<div class="mt-6">
				<span class="block w-full rounded-md shadow-sm">
					<button 
						id="copyButton" 
						data-copy-to-clipboard-target="area2" 
						type="button" 
						dir="ltr"
						aria-label="Copy text to clipboard"
						class="w-full text-white bg-gradient-to-r from-purple-500 to-pink-500
						hover:bg-gradient-to-bl hover:scale-[1.02] active:scale-[0.98]
						focus:ring-4 focus:outline-none focus:ring-blue-300 
							dark:focus:ring-blue-800 
						font-medium rounded-lg text-base lg:text-lg px-6 py-3
						text-center me-2 mb-2
						disabled:opacity-50 disabled:cursor-not-allowed
						transform transition-all duration-200 ease-in-out"
					>
						<span id="default-message">Copy</span>
						<span id="success-message" class="hidden inline-flex items-center">
							<svg class="w-3 h-3 text-white me-1.5" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 16 12">
								<path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M1 5.917 5.724 10.5 15 1.5"></path>
							</svg>
							Copied!
						</span>
					</button>

					<p class="text-sm text-gray-300 mt-2 flex items-center justify-center gap-2">
						بعد النسخ قم باللصق في التطبيق الذي تريد إستخدام النص فيه
						<kbd class="px-2 py-1 text-xs font-semibold text-gray-800 bg-gray-100 border border-gray-200 rounded-lg dark:bg-gray-600 dark:text-gray-100 dark:border-gray-500">
							Ctrl/Cmd + Enter
						</kbd>
					</p>
				</span>
			</div>
		</GradientCard>
	</div>
			
	<div class="mb-12">
		<GradientBorderCard>
			<WhatIsThis />
		</GradientBorderCard>
	</div>

	<div class="mb-12">
		<GradientBorderCard>
			<SocialLinks />
		</GradientBorderCard>
	</div>



	


			
	
	<!-- a div that contains social links to the developer, discord server, github page for the project ...etc -->

	<script>
		import { CopyClipboard } from 'flowbite';
		import type { CopyClipboardOptions, CopyClipboardInterface, InstanceOptions } from 'flowbite';
		import { run } from '../assets/js/arabic_shaper';
		
		// Add one for source area
		const $sourceArea: HTMLInputElement = document.querySelector('#area');
		const $triggerEl: HTMLInputElement = document.querySelector('#copyButton');
		const $targetEl: HTMLInputElement = document.querySelector('#area2');
		const $defaultMessage = document.getElementById('default-message');
		const $successMessage = document.getElementById('success-message');

		const options: CopyClipboardOptions = {
			contentType: 'input',
			htmlEntities: false,
			onCopy: () => {
				$triggerEl.disabled = true;
				$defaultMessage.classList.add('hidden');
				$successMessage.classList.remove('hidden');
				if (!$targetEl.value) {
					// Show error if trying to copy empty text
					$successMessage.innerHTML = `
						<svg class="w-3 h-3 text-red-500 me-1.5" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 14 14">
							<path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6"/>
						</svg>
						لا يوجد نص للنسخ
					`;
				}

				setTimeout(() => {
					$triggerEl.disabled = false;
					$defaultMessage.classList.remove('hidden');
					$successMessage.classList.add('hidden');
					// Reset success message
					$successMessage.innerHTML = `
						<svg class="w-3 h-3 text-white me-1.5" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 16 12">
							<path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M1 5.917 5.724 10.5 15 1.5"></path>
						</svg>
						Copied!
					`;
				}, 2000);
			},
		};

		const instanceOptions: InstanceOptions = {
			id: 'copy-clipboard-example',
			override: true,
		};

		const clipboard: CopyClipboardInterface = new CopyClipboard($triggerEl, $targetEl, options, instanceOptions);

		clipboard.copy();

		document.addEventListener('keydown', (e) => {
			if ((e.ctrlKey || e.metaKey) && e.key === 'Enter') {
				if (!$triggerEl.disabled) {
					clipboard.copy();
				}
			}
		});

		const charCountEl = document.getElementById('charCount');
		$sourceArea.addEventListener('input', () => {
			const startTime = performance.now();
			charCountEl.textContent = $sourceArea.value.length.toString();
			if ($sourceArea.value.length > 1000) {
				$targetEl.value = '⏳ جاري المعالجة...';
				$targetEl.classList.add('animate-pulse');
				requestAnimationFrame(() => {
					$targetEl.value = run($sourceArea.value);
					$targetEl.classList.remove('animate-pulse');
					console.debug(`Processing took ${performance.now() - startTime}ms`);
				});
			} else {
				$targetEl.value = run($sourceArea.value);
			}

			// Show warning icon for long text
			const lengthIndicator = document.getElementById('lengthIndicator');
			if ($sourceArea.value.length > 500) {
				lengthIndicator.classList.remove('hidden');
			} else {
				lengthIndicator.classList.add('hidden');
			}
		});

		const $clearButton = document.getElementById('clearButton');
		$clearButton?.addEventListener('click', () => {
			$sourceArea.value = '';
			$targetEl.value = '';
			charCountEl.textContent = '0';
			$sourceArea.style.height = 'auto';
		});
	</script>
</div>
